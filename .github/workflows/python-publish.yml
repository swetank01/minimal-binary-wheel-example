# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

#on:
#  release:
#    types: [published]
on:
    workflow_dispatch:
    
permissions:
  contents: read

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'

    - name: Install and configure Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.4.2
        virtualenvs-create: true

    - name: install
      run:  |
        poetry install

    - name: Build Binary
      run:  |
        poetry shell
        invoke build

    - name: Setup JFrog CLI
      uses: jfrog/setup-jfrog-cli@v3
      env:  
        JF_URL: ${{ secrets.JF_URL }}
        JF_ACCESS_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}
           
    - name: Set CLI Config
      run: jf pip-config --global=true --repo-resolve=pypi
           
    - name: Install Deps
      run: jf pip install .
           
    - name: Package the project
      run: python setup.py sdist bdist_wheel

